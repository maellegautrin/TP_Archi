
/**
 * Adds two 4-bit values using the carry lookahead method.
 * The most significant carry bit is ignored.
 */

CHIP CarryLookahead4 {
    IN  
        a[4],          
        b[4], 
        cin; 

    OUT 
        out[4],
        cout;
    

    PARTS:
    And(a = a[0], b = b[0] ,  out = g0 );
    And(a = a[1], b = b[1] ,  out = g1 );
    And(a = a[2], b = b[2] ,  out = g2 );
    And(a = a[3], b = b[3] ,  out = g3 );

    Xor(a = a[0], b = b[0] ,  out = p0 );
    Xor(a = a[1], b = b[1] ,  out = p1 );
    Xor(a = a[2], b = b[2] ,  out = p2 );
    Xor(a = a[3], b = b[3] ,  out = p3 );

    And( a = p0 , b = cin, out = o0 );	
    Or ( a = g0 , b = o0 , out = c1 );

    And( a = p1 , b = c1 , out = o1 );	
    Or ( a = g1 , b = o1 , out = c2 );

    And( a = p2 , b = c2 , out = o2 );	
    Or ( a = g2 , b = o2 , out = c3 );

    And( a = p3 , b = c3 , out = o3 );	
    Or ( a = g3 , b = o3 , out = cout );

    Xor( a = p0, b = cin, out = out[0] );
    Xor( a = p1, b = c1 , out = out[1] );
    Xor( a = p2, b = c2 , out = out[2] );
    Xor( a = p3, b = c3 , out = out[3] );
}
